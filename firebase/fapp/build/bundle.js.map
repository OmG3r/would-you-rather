{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/store.js","../../src/comps/Land.svelte","../../src/comps/Question.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.24.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from 'svelte/store';\r\n\r\nexport const activePackage = writable(0);\r\n\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCosNRqZEJ9_FUmGfa6PIsXIMqJGopZDQA\",\r\n    authDomain: \"would-your-rather.firebaseapp.com\",\r\n    databaseURL: \"https://would-your-rather.firebaseio.com\",\r\n    projectId: \"would-your-rather\",\r\n    storageBucket: \"would-your-rather.appspot.com\",\r\n    messagingSenderId: \"100928772304\",\r\n    appId: \"1:100928772304:web:5b2ae8b4376514c08fe6d5\",\r\n    measurementId: \"G-8T2965MRJS\"\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const db = firebase.firestore();\r\n\r\nexport const analytics = firebase.analytics();\r\n\r\n\r\nexport const itemBaseStorageLink = \"https://firebasestorage.googleapis.com/v0/b/would-your-rather.appspot.com/o/\"\r\n\r\nexport const generateImageUrl = (name, token) => {\r\n    let itemPathBase = \"packages/\" + name\r\n    let encode = encodeURIComponent(itemPathBase)\r\n    if (token) {\r\n        return itemBaseStorageLink + encode + \"?alt=media&token=\" + token\r\n    } else {\r\n        return itemBaseStorageLink + encode + \"?alt=media&token=\"\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const questions = {\r\n    \"1001\": {\r\n        \"1\": {\r\n            one: {\r\n                text: \"Nod5lo na9raw w njibo A\",\r\n                clicks: 958\r\n            },\r\n            two: {\r\n                text: \"Nel3abo belote\",\r\n                clicks: 600\r\n            }\r\n        },\r\n        \"2\": {\r\n            one: {\r\n                text: \"nor9do\",\r\n                clicks: 958\r\n            },\r\n            two: {\r\n                text: \"neklo kaskrout\",\r\n                clicks: 600\r\n            }\r\n        }\r\n    },\r\n    \"1002\": {\r\n        \"1\": {\r\n            one: {\r\n                text: \"buy a car\",\r\n                clicks: 9571\r\n            },\r\n            two: {\r\n                text: \"buy a bike\",\r\n                clicks: 3598\r\n            }\r\n        },\r\n        \"2\": {\r\n            one: {\r\n                text: \"go to tunisia\",\r\n                clicks: 958\r\n            },\r\n            two: {\r\n                text: \"go to america\",\r\n                clicks: 600\r\n            }\r\n        }\r\n    },\r\n    \"1003\": {\r\n        \"1\": {\r\n            one: {\r\n                text: \"boy\",\r\n                clicks: 751\r\n            },\r\n            two: {\r\n                text: \"girl\",\r\n                clicks: 369\r\n            }\r\n        },\r\n        \"2\": {\r\n            one: {\r\n                text: \"yes we are here\",\r\n                clicks: 958\r\n            },\r\n            two: {\r\n                text: \"no we are not\",\r\n                clicks: 600\r\n            }\r\n        },\r\n        \"3\": {\r\n            one: {\r\n                text: \"league of legends\",\r\n                clicks: 958\r\n            },\r\n            two: {\r\n                text: \"dota 2\",\r\n                clicks: 600\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}","<style>\r\n    .u-view {\r\n        min-height: 100vh;\r\n        display: flex;\r\n        flex-direction: column;\r\n        \r\n        \r\n\r\n    }\r\n    .r {\r\n        background: #6190E8;  /* fallback for old browsers */\r\n        background: -webkit-linear-gradient(to bottom, #A7BFE8, #6190E8);  /* Chrome 10-25, Safari 5.1-6 */\r\n        background: linear-gradient(to bottom, #A7BFE8, #6190E8); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\r\n    }\r\n\r\n    header {\r\n        display: flex;\r\n        align-items: center;\r\n        flex-direction: column;\r\n\r\n        margin-bottom: 16px\r\n    }\r\n    .u-game-title {\r\n        font-size: 36px;\r\n        font-weight: bold;\r\n    }\r\n\r\n    .u-page-title {\r\n        font-size: 22px;\r\n        font-weight: bold;\r\n    }\r\n\r\n    header h2 {\r\n        margin-bottom: 8px;\r\n    }\r\n    \r\n\r\n    .u-content {\r\n        flex-grow: 1;\r\n        padding: 20px;\r\n    }\r\n\r\n\r\n\r\n\r\n    .u-categories {\r\n        width: 100%;\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n\r\n    .u-categorey {\r\n        min-height: 100px;\r\n        padding: 8px;\r\n        width: 100%;\r\n        margin-bottom: 16px;\r\n\r\n        display: flex;\r\n        align-items: center;\r\n\r\n        border: 8px solid white;\r\n        border-radius: 24px;\r\n\r\n        cursor: pointer;\r\n    }\r\n    .u-cat-image-container {\r\n        width: 110px;\r\n        display: flex;\r\n\r\n        margin-right: 16px;\r\n\r\n    }\r\n    .u-cat-image {\r\n        display: block;\r\n        max-height: 90px;\r\n        margin: auto;\r\n    }\r\n    .u-cat-text {\r\n        \r\n    }\r\n\r\n    .u-cat-title {\r\n        font-size: 27px;\r\n        font-weight: bold;\r\n    }\r\n</style>\r\n\r\n\r\n\r\n<script>\r\n    import {activePackage, generateImageUrl} from '../store.js'\r\n    export let questions\r\n    export let packages\r\n    console.log(questions)\r\n    console.log(packages)\r\n\r\n    let categories = [\r\n        {\r\n            id: '1001',\r\n            title: 'Love',\r\n            subtitle: 'Package',\r\n            img: 'heart-01.png',\r\n            backgroundColor: '#F94865',\r\n            textColor: '#100406',\r\n            numberQuestions: '30',\r\n        },\r\n        {\r\n            id: '1002',\r\n            title: 'Food',\r\n            subtitle: 'Package',\r\n            img: 'food-01.png',\r\n            backgroundColor: '#F9CF29',\r\n            textColor: '#191918',\r\n            numberQuestions: '30',\r\n        },\r\n        {\r\n            id: '1003',\r\n            title: 'Tech Lovers',\r\n            subtitle: 'Package',\r\n            img: 'phone-01.png',\r\n            backgroundColor: '#152033',\r\n            textColor: '#E6E6E6',\r\n            numberQuestions: '30',\r\n        }\r\n    ]\r\n\r\n\r\n    let setActivePackage = (num) => {\r\n        $activePackage = num\r\n    }\r\n</script>\r\n\r\n<div class=\"u-view\">\r\n    <div class=\"u-content\">\r\n        <header>\r\n            <div class=\"u-game-title\">Would you Rather</div>\r\n            <div class=\"u-page-title\">Questions</div>\r\n        </header>\r\n        <div class=\"u-categories\">\r\n            {#each Object.entries(packages) as [id, item]}\r\n                <div on:click={() => {setActivePackage(id)}} class=\"u-categorey\"\r\n                style={\"background-color: \" + item.backgroundColor + \";\"}>\r\n                    <div class=\"u-cat-image-container\">\r\n                        <img class=\"u-cat-image\" src={generateImageUrl(id, item.img) } alt={item.img}>\r\n                    </div>\r\n                    \r\n                    <div class=\"u-cat-text\" style={\"color: \" + item.textColor + \";\"}>\r\n                        <div class=\"u-cat-title\">\r\n                            {item.title}\r\n                        </div>\r\n                        <div class=\"u-cat-subtitle\">\r\n                            Package\r\n                        </div>\r\n                        <div class=\"u-cat-questions\">\r\n                            {#if questions[id]}\r\n                                {Object.keys(questions[id]).length} Questions\r\n                            {:else}\r\n                                0 Questions\r\n                            {/if}\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            {/each}\r\n        </div>\r\n    \r\n    </div>\r\n\r\n</div>\r\n","<style>\r\n    .u-view {\r\n        height: 100vh;\r\n        display: flex;\r\n        flex-direction: column;\r\n        \r\n        \r\n\r\n    }\r\n  \r\n    .u-content {\r\n        flex-grow: 1;\r\n        padding: 10px 20px;\r\n    }\r\n    header {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        \r\n        \r\n        position: relative;\r\n        margin-bottom: 8px;\r\n    }\r\n    .u-game-title {\r\n        font-size: 30px;\r\n        font-weight: bold;\r\n    }\r\n\r\n\r\n    .u-game-title-container {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        \r\n    }\r\n\r\n    .u-back {\r\n        position: absolute;\r\n        left: 8px;\r\n    }\r\n    \r\n\r\n    .u-option-box {\r\n        width: 100%;\r\n        background-color: white;\r\n        border-radius: 18px;\r\n        min-height: calc(100vh - 200px);\r\n\r\n        padding: 10px;\r\n\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n\r\n        position: relative;\r\n\r\n        margin-bottom: 8px;\r\n    }\r\n\r\n    .u-option {\r\n        padding: 0 16px;\r\n        width: 100%;\r\n\r\n        border-radius: 6px;\r\n\r\n        display: flex;\r\n        flex-grow: 1;\r\n\r\n        position: relative;\r\n\r\n        font-size: 19px;\r\n        color: white;\r\n        text-align: center;\r\n\r\n        cursor: pointer;\r\n    }\r\n\r\n    .u-option.u-one, .u-choice.u-one {\r\n        background-color: #FC6491;\r\n    }\r\n\r\n\r\n    .u-option.u-two, .u-choice.u-two {\r\n        background-color: #3E4EA3;\r\n    }\r\n\r\n\r\n    .u-choice {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        padding: 4px 0 0 0;\r\n    }\r\n    .u-spacer {\r\n        width: 100%;\r\n        height: 18px;;\r\n    }\r\n\r\n    .u-option-text {\r\n        margin: auto;\r\n        font-family: 'Changa', sans-serif;\r\n    }\r\n\r\n    .u-ticked {\r\n        position: absolute;\r\n        bottom: 8px;\r\n        right: 8px;\r\n    }\r\n    .absolute-center {\r\n        position: absolute;\r\n        margin-left: auto;\r\n        margin-right: auto;\r\n        left: 0;\r\n        right: 0;\r\n        bottom: -28px;\r\n        z-index: 10;\r\n    }\r\n\r\n    .u-or {\r\n        \r\n        box-sizing: content-box;\r\n        background: white;\r\n        color: black;\r\n        \r\n\r\n        height: 20px;\r\n        width: 20px;\r\n        padding: 10px;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        border-radius: 50%;\r\n\r\n        box-shadow: 0 1px 1px rgba(0,0,0,0.25), \r\n              0 2px 2px rgba(0,0,0,0.20), \r\n              0 4px 4px rgba(0,0,0,0.15), \r\n              0 8px 8px rgba(0,0,0,0.10),\r\n              0 16px 16px rgba(0,0,0,0.05);\r\n        \r\n    }\r\n\r\n    .u-result {\r\n        height: 40px;\r\n\r\n        border: 3px solid white;\r\n        border-radius: 16px;\r\n        width: 80%;\r\n        display: flex;\r\n        overflow: hidden;\r\n    }\r\n\r\n    .u-button {\r\n        border: 2px solid white;\r\n        font-weight: bold;\r\n        font-size: 18px;\r\n        border-radius: 12px;\r\n        margin: 0 auto;\r\n\r\n\r\n        width: 100px;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        padding: 10px 8px 2px 8px;\r\n\r\n        cursor: pointer;\r\n    }\r\n\r\n    \r\n</style>\r\n\r\n\r\n<script>\r\n    import {activePackage, analytics} from '../store.js'\r\n    export let mySwiper = {}\r\n    export let option = {\r\n        one: {\r\n            text: \"Nod5lo na9raw w njibo A\",\r\n            clicks: 958\r\n        },\r\n        two: {\r\n            text: \"Nel3abo belote\",\r\n            clicks: 600\r\n        },\r\n    }\r\n    let selectedOption = \"none\"\r\n\r\n    let doChoose = (choice) => {\r\n        option[choice].clicks += 1\r\n        selectedOption = choice\r\n    }\r\n\r\n    let sliderNext = () => {\r\n        if (mySwiper.activeIndex == mySwiper.slides.length - 1) {\r\n            goHome('finished')\r\n            return\r\n        }\r\n        \r\n        mySwiper.slideNext(500)\r\n        console.log(mySwiper.activeIndex)\r\n        console.log(mySwiper.slides.length)\r\n        \r\n    }\r\n\r\n    let goHome = (endtype) => {\r\n        mySwiper.slideTo(0, 500)\r\n        document.body.style.overflow = \"auto\"\r\n        setTimeout(() => {\r\n            if (endtype == \"finished\") {\r\n                analytics.logEvent('package_finished', {id: $activePackage})\r\n            } else {\r\n                analytics.logEvent('package_terminated', {id: $activePackage})\r\n            }\r\n            mySwiper.update()\r\n            $activePackage = 0\r\n        }, 500)\r\n    }\r\n\r\n    let oneCalc = Math.round(((option.one.clicks/(option.one.clicks + option.two.clicks))) * 100)\r\n    let twoCalc = 100 - oneCalc\r\n    if (isNaN(oneCalc)) {\r\n        console.log(oneCalc)\r\n        oneCalc = 100\r\n        twoCalc = 0\r\n    }\r\n</script>\r\n\r\n<div class=\"u-view\">\r\n    <div class=\"u-content\">\r\n        <header>\r\n            <img on:click={goHome} class=\"u-back\" src=\"/imgs/misc/back.png\" alt=\"\">\r\n            <div class=\"u-game-title-container\">\r\n                <div class=\"u-game-title\">Would</div>\r\n                <div class=\"u-game-title\">you Rather</div>\r\n            </div>\r\n            \r\n        </header>\r\n        \r\n        <div class=\"u-option-box\">\r\n            <div on:click={() => {doChoose('one')}} class=\"u-option u-one\">\r\n                <div class=\"u-option-text\">\r\n                    {option.one.text}\r\n                </div>\r\n                {#if selectedOption == \"one\"}\r\n                    <img class=\"u-ticked\" src=\"/imgs/misc/tick-01.png\" alt=\"ticked\">\r\n                {/if}\r\n                {#if selectedOption == \"none\"}\r\n                    <div class=\"u-or absolute-center\">\r\n                        or\r\n                    </div>\r\n                {:else}\r\n                    <div class=\"absolute-center u-result\">\r\n                        <div class=\"u-choice u-one\"\r\n                        style={\"width: \"+ oneCalc + \"%;\" }>\r\n                            {#if oneCalc > 12}\r\n                                {oneCalc} %\r\n                            {/if}\r\n                        </div>\r\n\r\n                        <div class=\"u-choice u-two\"\r\n                        style={\"width: \"+ twoCalc + \"%;\" }>\r\n                            {#if twoCalc > 12}\r\n                                {twoCalc}\r\n                            {/if}\r\n                            \r\n                        </div>\r\n\r\n                    </div>\r\n                {/if}\r\n            </div>\r\n                <div class=\"u-spacer\"></div>\r\n            <div on:click={() => {doChoose('two')}} class=\"u-option u-two\">\r\n                <div class=\"u-option-text\">\r\n                    {option.two.text}\r\n                </div>\r\n                {#if selectedOption == \"two\"}\r\n                    <img class=\"u-ticked\" src=\"/imgs/misc/tick-01.png\" alt=\"ticked\">\r\n                {/if}\r\n            </div>\r\n            \r\n\r\n            \r\n        \r\n        </div>\r\n\r\n        {#if selectedOption != \"none\"}\r\n            <div on:click={sliderNext} class=\"u-button\">\r\n                NEXT\r\n            </div>\r\n        {/if}\r\n    \r\n    </div>\r\n\r\n    <footer>\r\n\r\n    </footer>\r\n\r\n</div>","<style>\n    .swiper-container {\n        width: 100%;\n        \n\n        max-width: 600px;\n        margin: auto;\n    }\n\n    .swiper-slide {\n        max-height: 100vh;\n        overflow-y: auto;\n    }\n\n</style>\n\n\n<script>\n    import {activePackage, db, analytics} from './store.js'\n    import Land from './comps/Land.svelte'\n    import Question from './comps/Question.svelte'\n    import {onMount} from 'svelte'\n    let mySwiper = {}\n    onMount(async () => {\n        mySwiper = new Swiper('.swiper-container', {\n            speed: 400,\n            noSwiping: true,\n            draggable: false,\n            autoplay: false,\n            keyboard: false,\n            allowTouchMove: false\n        });\n    })\n    \n    let packages = {}\n    let packagesResolution = new Promise(async (resolve, reject) => {\n        db.collection(\"app\").doc(\"packages\").onSnapshot(function(doc) {\n            packages = doc.data()\n            resolve(true)\n        });\n    })\n    let questions = {}\n    let questionsResolution = new Promise (async (resolve, reject) => {\n        db.collection(\"app\").doc(\"questions\").onSnapshot(function(doc) {\n            questions = doc.data()\n            resolve(true)\n        });\n    })\n    let init = false\n    Promise.all([questionsResolution, packagesResolution]).then(() => {\n        init = true\n        analytics.logEvent('app_initialized')\n        setTimeout(() => {\n            document.getElementById('u-loader').parentNode.removeChild(document.getElementById('u-loader'))\n        },500)\n    })\n\n    activePackage.subscribe((value) => {\n        console.log(value)\n        \n        setTimeout(() => {\n            if (value != 0) {\n                \n                document.body.style.overflow = \"hidden\"\n                analytics.logEvent('package_started', {id: value})\n                mySwiper.update()\n                mySwiper.slideNext(500)\n                \n            }\n            \n        }, 200)\n    })\n</script>\n\n\n    <div class=\"swiper-container\">\n        <div class=\"swiper-wrapper\">\n            <div class=\"swiper-slide\">\n                {#if init }\n                    <Land {packages} {questions} />\n                {/if}\n            </div>\n            {#if $activePackage}\n                {#each Object.entries(questions[$activePackage]) as [num, data]}\n                    <div class=\"swiper-slide\">\n                        <Question {mySwiper} option={data} />\n                    </div>\n                {/each}\n            {/if}\n        </div>\n        \n    </div>\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","set_store_value","ret","value","set","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","wholeText","current_component","set_current_component","onMount","Error","get_current_component","on_mount","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","create_component","mount_component","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","ready","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","subscriber_queue","activePackage","start","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","writable","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","analytics","itemBaseStorageLink","generateImageUrl","token","encode","encodeURIComponent","keys","title","img","textColor","backgroundColor","entries","questions","packages","console","log","setActivePackage","num","$activePackage","id","one","two","mySwiper","option","clicks","selectedOption","doChoose","choice","goHome","endtype","slideTo","body","style","overflow","setTimeout","logEvent","oneCalc","Math","round","twoCalc","isNaN","activeIndex","slides","slideNext","Swiper","speed","noSwiping","draggable","autoplay","keyboard","allowTouchMove","packagesResolution","reject","collection","doc","onSnapshot","questionsResolution","all","getElementById"],"mappings":"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"}